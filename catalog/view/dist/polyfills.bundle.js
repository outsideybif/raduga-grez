(function(e){function t(n){if(r[n])return r[n].exports;var o=r[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,t),o.l=!0,o.exports}var r={};return t.m=e,t.c=r,t.d=function(e,r,n){t.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:n})},t.r=function(e){'undefined'!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:'Module'}),Object.defineProperty(e,'__esModule',{value:!0})},t.t=function(e,r){if(1&r&&(e=t(e)),8&r)return e;if(4&r&&'object'==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(t.r(n),Object.defineProperty(n,'default',{enumerable:!0,value:e}),2&r&&'string'!=typeof e)for(var o in e)t.d(n,o,function(t){return e[t]}.bind(null,o));return n},t.n=function(e){var r=e&&e.__esModule?function(){return e['default']}:function(){return e};return t.d(r,'a',r),r},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p='',t(t.s='./src/polyfills.js')})({"./node_modules/@webcomponents/custom-elements/custom-elements.min.js":/*!****************************************************************************!*\
  !*** ./node_modules/@webcomponents/custom-elements/custom-elements.min.js ***!
  \****************************************************************************//*! no static exports found */function(module,exports){eval('(function(){\n/*\n\n Copyright (c) 2020 The Polymer Project Authors. All rights reserved.\n This code may only be used under the BSD style license found at\n http://polymer.github.io/LICENSE.txt The complete set of authors may be found\n at http://polymer.github.io/AUTHORS.txt The complete set of contributors may\n be found at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by\n Google as part of the polymer project is also subject to an additional IP\n rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\'use strict\';/*\n\n Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n This code may only be used under the BSD style license found at\n http://polymer.github.io/LICENSE.txt The complete set of authors may be found\n at http://polymer.github.io/AUTHORS.txt The complete set of contributors may\n be found at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by\n Google as part of the polymer project is also subject to an additional IP\n rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nvar n=window.Document.prototype.createElement,p=window.Document.prototype.createElementNS,aa=window.Document.prototype.importNode,ba=window.Document.prototype.prepend,ca=window.Document.prototype.append,da=window.DocumentFragment.prototype.prepend,ea=window.DocumentFragment.prototype.append,q=window.Node.prototype.cloneNode,r=window.Node.prototype.appendChild,t=window.Node.prototype.insertBefore,u=window.Node.prototype.removeChild,v=window.Node.prototype.replaceChild,w=Object.getOwnPropertyDescriptor(window.Node.prototype,\n"textContent"),y=window.Element.prototype.attachShadow,z=Object.getOwnPropertyDescriptor(window.Element.prototype,"innerHTML"),A=window.Element.prototype.getAttribute,B=window.Element.prototype.setAttribute,C=window.Element.prototype.removeAttribute,D=window.Element.prototype.getAttributeNS,E=window.Element.prototype.setAttributeNS,F=window.Element.prototype.removeAttributeNS,G=window.Element.prototype.insertAdjacentElement,H=window.Element.prototype.insertAdjacentHTML,fa=window.Element.prototype.prepend,\nha=window.Element.prototype.append,ia=window.Element.prototype.before,ja=window.Element.prototype.after,ka=window.Element.prototype.replaceWith,la=window.Element.prototype.remove,ma=window.HTMLElement,I=Object.getOwnPropertyDescriptor(window.HTMLElement.prototype,"innerHTML"),na=window.HTMLElement.prototype.insertAdjacentElement,oa=window.HTMLElement.prototype.insertAdjacentHTML;var pa=new Set;"annotation-xml color-profile font-face font-face-src font-face-uri font-face-format font-face-name missing-glyph".split(" ").forEach(function(a){return pa.add(a)});function qa(a){var b=pa.has(a);a=/^[a-z][.0-9_a-z]*-[-.0-9_a-z]*$/.test(a);return!b&&a}var ra=document.contains?document.contains.bind(document):document.documentElement.contains.bind(document.documentElement);\nfunction J(a){var b=a.isConnected;if(void 0!==b)return b;if(ra(a))return!0;for(;a&&!(a.__CE_isImportDocument||a instanceof Document);)a=a.parentNode||(window.ShadowRoot&&a instanceof ShadowRoot?a.host:void 0);return!(!a||!(a.__CE_isImportDocument||a instanceof Document))}function K(a){var b=a.children;if(b)return Array.prototype.slice.call(b);b=[];for(a=a.firstChild;a;a=a.nextSibling)a.nodeType===Node.ELEMENT_NODE&&b.push(a);return b}\nfunction L(a,b){for(;b&&b!==a&&!b.nextSibling;)b=b.parentNode;return b&&b!==a?b.nextSibling:null}\nfunction M(a,b,c){for(var f=a;f;){if(f.nodeType===Node.ELEMENT_NODE){var d=f;b(d);var e=d.localName;if("link"===e&&"import"===d.getAttribute("rel")){f=d.import;void 0===c&&(c=new Set);if(f instanceof Node&&!c.has(f))for(c.add(f),f=f.firstChild;f;f=f.nextSibling)M(f,b,c);f=L(a,d);continue}else if("template"===e){f=L(a,d);continue}if(d=d.__CE_shadowRoot)for(d=d.firstChild;d;d=d.nextSibling)M(d,b,c)}f=f.firstChild?f.firstChild:L(a,f)}};function N(){var a=!(null===O||void 0===O||!O.noDocumentConstructionObserver),b=!(null===O||void 0===O||!O.shadyDomFastWalk);this.h=[];this.a=[];this.f=!1;this.shadyDomFastWalk=b;this.C=!a}function P(a,b,c,f){var d=window.ShadyDom;if(a.shadyDomFastWalk&&d&&d.inUse){if(b.nodeType===Node.ELEMENT_NODE&&c(b),b.querySelectorAll)for(a=d.nativeMethods.querySelectorAll.call(b,"*"),b=0;b<a.length;b++)c(a[b])}else M(b,c,f)}function sa(a,b){a.f=!0;a.h.push(b)}function ta(a,b){a.f=!0;a.a.push(b)}\nfunction Q(a,b){a.f&&P(a,b,function(c){return R(a,c)})}function R(a,b){if(a.f&&!b.__CE_patched){b.__CE_patched=!0;for(var c=0;c<a.h.length;c++)a.h[c](b);for(c=0;c<a.a.length;c++)a.a[c](b)}}function S(a,b){var c=[];P(a,b,function(d){return c.push(d)});for(b=0;b<c.length;b++){var f=c[b];1===f.__CE_state?a.connectedCallback(f):T(a,f)}}function U(a,b){var c=[];P(a,b,function(d){return c.push(d)});for(b=0;b<c.length;b++){var f=c[b];1===f.__CE_state&&a.disconnectedCallback(f)}}\nfunction V(a,b,c){c=void 0===c?{}:c;var f=c.D,d=c.upgrade||function(g){return T(a,g)},e=[];P(a,b,function(g){a.f&&R(a,g);if("link"===g.localName&&"import"===g.getAttribute("rel")){var h=g.import;h instanceof Node&&(h.__CE_isImportDocument=!0,h.__CE_registry=document.__CE_registry);h&&"complete"===h.readyState?h.__CE_documentLoadHandled=!0:g.addEventListener("load",function(){var k=g.import;if(!k.__CE_documentLoadHandled){k.__CE_documentLoadHandled=!0;var l=new Set;f&&(f.forEach(function(m){return l.add(m)}),\nl.delete(k));V(a,k,{D:l,upgrade:d})}})}else e.push(g)},f);for(b=0;b<e.length;b++)d(e[b])}\nfunction T(a,b){try{var c=b.ownerDocument,f=c.__CE_registry;var d=f&&(c.defaultView||c.__CE_isImportDocument)?W(f,b.localName):void 0;if(d&&void 0===b.__CE_state){d.constructionStack.push(b);try{try{if(new d.constructorFunction!==b)throw Error("The custom element constructor did not produce the element being upgraded.");}finally{d.constructionStack.pop()}}catch(k){throw b.__CE_state=2,k;}b.__CE_state=1;b.__CE_definition=d;if(d.attributeChangedCallback&&b.hasAttributes()){var e=d.observedAttributes;\nfor(d=0;d<e.length;d++){var g=e[d],h=b.getAttribute(g);null!==h&&a.attributeChangedCallback(b,g,null,h,null)}}J(b)&&a.connectedCallback(b)}}catch(k){X(k)}}N.prototype.connectedCallback=function(a){var b=a.__CE_definition;if(b.connectedCallback)try{b.connectedCallback.call(a)}catch(c){X(c)}};N.prototype.disconnectedCallback=function(a){var b=a.__CE_definition;if(b.disconnectedCallback)try{b.disconnectedCallback.call(a)}catch(c){X(c)}};\nN.prototype.attributeChangedCallback=function(a,b,c,f,d){var e=a.__CE_definition;if(e.attributeChangedCallback&&-1<e.observedAttributes.indexOf(b))try{e.attributeChangedCallback.call(a,b,c,f,d)}catch(g){X(g)}};\nfunction ua(a,b,c,f){var d=b.__CE_registry;if(d&&(null===f||"http://www.w3.org/1999/xhtml"===f)&&(d=W(d,c)))try{var e=new d.constructorFunction;if(void 0===e.__CE_state||void 0===e.__CE_definition)throw Error("Failed to construct \'"+c+"\': The returned value was not constructed with the HTMLElement constructor.");if("http://www.w3.org/1999/xhtml"!==e.namespaceURI)throw Error("Failed to construct \'"+c+"\': The constructed element\'s namespace must be the HTML namespace.");if(e.hasAttributes())throw Error("Failed to construct \'"+\nc+"\': The constructed element must not have any attributes.");if(null!==e.firstChild)throw Error("Failed to construct \'"+c+"\': The constructed element must not have any children.");if(null!==e.parentNode)throw Error("Failed to construct \'"+c+"\': The constructed element must not have a parent node.");if(e.ownerDocument!==b)throw Error("Failed to construct \'"+c+"\': The constructed element\'s owner document is incorrect.");if(e.localName!==c)throw Error("Failed to construct \'"+c+"\': The constructed element\'s local name is incorrect.");\nreturn e}catch(g){return X(g),b=null===f?n.call(b,c):p.call(b,f,c),Object.setPrototypeOf(b,HTMLUnknownElement.prototype),b.__CE_state=2,b.__CE_definition=void 0,R(a,b),b}b=null===f?n.call(b,c):p.call(b,f,c);R(a,b);return b}\nfunction X(a){var b=a.message,c=a.sourceURL||a.fileName||"",f=a.line||a.lineNumber||0,d=a.column||a.columnNumber||0,e=void 0;void 0===ErrorEvent.prototype.initErrorEvent?e=new ErrorEvent("error",{cancelable:!0,message:b,filename:c,lineno:f,colno:d,error:a}):(e=document.createEvent("ErrorEvent"),e.initErrorEvent("error",!1,!0,b,c,f),e.preventDefault=function(){Object.defineProperty(this,"defaultPrevented",{configurable:!0,get:function(){return!0}})});void 0===e.error&&Object.defineProperty(e,"error",\n{configurable:!0,enumerable:!0,get:function(){return a}});window.dispatchEvent(e);e.defaultPrevented||console.error(a)};function va(){var a=this;this.a=void 0;this.w=new Promise(function(b){a.g=b})}va.prototype.resolve=function(a){if(this.a)throw Error("Already resolved.");this.a=a;this.g(a)};function wa(a){var b=document;this.g=void 0;this.b=a;this.a=b;V(this.b,this.a);"loading"===this.a.readyState&&(this.g=new MutationObserver(this.A.bind(this)),this.g.observe(this.a,{childList:!0,subtree:!0}))}function xa(a){a.g&&a.g.disconnect()}wa.prototype.A=function(a){var b=this.a.readyState;"interactive"!==b&&"complete"!==b||xa(this);for(b=0;b<a.length;b++)for(var c=a[b].addedNodes,f=0;f<c.length;f++)V(this.b,c[f])};function Y(a){this.j=new Map;this.l=new Map;this.u=new Map;this.o=!1;this.s=new Map;this.i=function(b){return b()};this.c=!1;this.m=[];this.b=a;this.v=a.C?new wa(a):void 0}Y.prototype.B=function(a,b){var c=this;if(!(b instanceof Function))throw new TypeError("Custom element constructor getters must be functions.");ya(this,a);this.j.set(a,b);this.m.push(a);this.c||(this.c=!0,this.i(function(){return za(c)}))};\nY.prototype.define=function(a,b){var c=this;if(!(b instanceof Function))throw new TypeError("Custom element constructors must be functions.");ya(this,a);Aa(this,a,b);this.m.push(a);this.c||(this.c=!0,this.i(function(){return za(c)}))};function ya(a,b){if(!qa(b))throw new SyntaxError("The element name \'"+b+"\' is not valid.");if(W(a,b))throw Error("A custom element with name \'"+(b+"\' has already been defined."));if(a.o)throw Error("A custom element is already being defined.");}\nfunction Aa(a,b,c){a.o=!0;var f;try{var d=c.prototype;if(!(d instanceof Object))throw new TypeError("The custom element constructor\'s prototype is not an object.");var e=function(m){var x=d[m];if(void 0!==x&&!(x instanceof Function))throw Error("The \'"+m+"\' callback must be a function.");return x};var g=e("connectedCallback");var h=e("disconnectedCallback");var k=e("adoptedCallback");var l=(f=e("attributeChangedCallback"))&&c.observedAttributes||[]}catch(m){throw m;}finally{a.o=!1}c={localName:b,\nconstructorFunction:c,connectedCallback:g,disconnectedCallback:h,adoptedCallback:k,attributeChangedCallback:f,observedAttributes:l,constructionStack:[]};a.l.set(b,c);a.u.set(c.constructorFunction,c);return c}Y.prototype.upgrade=function(a){V(this.b,a)};\nfunction za(a){if(!1!==a.c){a.c=!1;for(var b=[],c=a.m,f=new Map,d=0;d<c.length;d++)f.set(c[d],[]);V(a.b,document,{upgrade:function(k){if(void 0===k.__CE_state){var l=k.localName,m=f.get(l);m?m.push(k):a.l.has(l)&&b.push(k)}}});for(d=0;d<b.length;d++)T(a.b,b[d]);for(d=0;d<c.length;d++){for(var e=c[d],g=f.get(e),h=0;h<g.length;h++)T(a.b,g[h]);(e=a.s.get(e))&&e.resolve(void 0)}c.length=0}}Y.prototype.get=function(a){if(a=W(this,a))return a.constructorFunction};\nY.prototype.whenDefined=function(a){if(!qa(a))return Promise.reject(new SyntaxError("\'"+a+"\' is not a valid custom element name."));var b=this.s.get(a);if(b)return b.w;b=new va;this.s.set(a,b);var c=this.l.has(a)||this.j.has(a);a=-1===this.m.indexOf(a);c&&a&&b.resolve(void 0);return b.w};Y.prototype.polyfillWrapFlushCallback=function(a){this.v&&xa(this.v);var b=this.i;this.i=function(c){return a(function(){return b(c)})}};\nfunction W(a,b){var c=a.l.get(b);if(c)return c;if(c=a.j.get(b)){a.j.delete(b);try{return Aa(a,b,c())}catch(f){X(f)}}}window.CustomElementRegistry=Y;Y.prototype.define=Y.prototype.define;Y.prototype.upgrade=Y.prototype.upgrade;Y.prototype.get=Y.prototype.get;Y.prototype.whenDefined=Y.prototype.whenDefined;Y.prototype.polyfillDefineLazy=Y.prototype.B;Y.prototype.polyfillWrapFlushCallback=Y.prototype.polyfillWrapFlushCallback;function Z(a,b,c){function f(d){return function(e){for(var g=[],h=0;h<arguments.length;++h)g[h]=arguments[h];h=[];for(var k=[],l=0;l<g.length;l++){var m=g[l];m instanceof Element&&J(m)&&k.push(m);if(m instanceof DocumentFragment)for(m=m.firstChild;m;m=m.nextSibling)h.push(m);else h.push(m)}d.apply(this,g);for(g=0;g<k.length;g++)U(a,k[g]);if(J(this))for(g=0;g<h.length;g++)k=h[g],k instanceof Element&&S(a,k)}}void 0!==c.prepend&&(b.prepend=f(c.prepend));void 0!==c.append&&(b.append=f(c.append))};function Ba(a){Document.prototype.createElement=function(b){return ua(a,this,b,null)};Document.prototype.importNode=function(b,c){b=aa.call(this,b,!!c);this.__CE_registry?V(a,b):Q(a,b);return b};Document.prototype.createElementNS=function(b,c){return ua(a,this,c,b)};Z(a,Document.prototype,{prepend:ba,append:ca})};function Ca(a){function b(f){return function(d){for(var e=[],g=0;g<arguments.length;++g)e[g]=arguments[g];g=[];for(var h=[],k=0;k<e.length;k++){var l=e[k];l instanceof Element&&J(l)&&h.push(l);if(l instanceof DocumentFragment)for(l=l.firstChild;l;l=l.nextSibling)g.push(l);else g.push(l)}f.apply(this,e);for(e=0;e<h.length;e++)U(a,h[e]);if(J(this))for(e=0;e<g.length;e++)h=g[e],h instanceof Element&&S(a,h)}}var c=Element.prototype;void 0!==ia&&(c.before=b(ia));void 0!==ja&&(c.after=b(ja));void 0!==ka&&\n(c.replaceWith=function(f){for(var d=[],e=0;e<arguments.length;++e)d[e]=arguments[e];e=[];for(var g=[],h=0;h<d.length;h++){var k=d[h];k instanceof Element&&J(k)&&g.push(k);if(k instanceof DocumentFragment)for(k=k.firstChild;k;k=k.nextSibling)e.push(k);else e.push(k)}h=J(this);ka.apply(this,d);for(d=0;d<g.length;d++)U(a,g[d]);if(h)for(U(a,this),d=0;d<e.length;d++)g=e[d],g instanceof Element&&S(a,g)});void 0!==la&&(c.remove=function(){var f=J(this);la.call(this);f&&U(a,this)})};function Da(a){function b(d,e){Object.defineProperty(d,"innerHTML",{enumerable:e.enumerable,configurable:!0,get:e.get,set:function(g){var h=this,k=void 0;J(this)&&(k=[],P(a,this,function(x){x!==h&&k.push(x)}));e.set.call(this,g);if(k)for(var l=0;l<k.length;l++){var m=k[l];1===m.__CE_state&&a.disconnectedCallback(m)}this.ownerDocument.__CE_registry?V(a,this):Q(a,this);return g}})}function c(d,e){d.insertAdjacentElement=function(g,h){var k=J(h);g=e.call(this,g,h);k&&U(a,h);J(g)&&S(a,h);return g}}function f(d,\ne){function g(h,k){for(var l=[];h!==k;h=h.nextSibling)l.push(h);for(k=0;k<l.length;k++)V(a,l[k])}d.insertAdjacentHTML=function(h,k){h=h.toLowerCase();if("beforebegin"===h){var l=this.previousSibling;e.call(this,h,k);g(l||this.parentNode.firstChild,this)}else if("afterbegin"===h)l=this.firstChild,e.call(this,h,k),g(this.firstChild,l);else if("beforeend"===h)l=this.lastChild,e.call(this,h,k),g(l||this.firstChild,null);else if("afterend"===h)l=this.nextSibling,e.call(this,h,k),g(this.nextSibling,l);\nelse throw new SyntaxError("The value provided ("+String(h)+") is not one of \'beforebegin\', \'afterbegin\', \'beforeend\', or \'afterend\'.");}}y&&(Element.prototype.attachShadow=function(d){d=y.call(this,d);if(a.f&&!d.__CE_patched){d.__CE_patched=!0;for(var e=0;e<a.h.length;e++)a.h[e](d)}return this.__CE_shadowRoot=d});z&&z.get?b(Element.prototype,z):I&&I.get?b(HTMLElement.prototype,I):ta(a,function(d){b(d,{enumerable:!0,configurable:!0,get:function(){return q.call(this,!0).innerHTML},set:function(e){var g=\n"template"===this.localName,h=g?this.content:this,k=p.call(document,this.namespaceURI,this.localName);for(k.innerHTML=e;0<h.childNodes.length;)u.call(h,h.childNodes[0]);for(e=g?k.content:k;0<e.childNodes.length;)r.call(h,e.childNodes[0])}})});Element.prototype.setAttribute=function(d,e){if(1!==this.__CE_state)return B.call(this,d,e);var g=A.call(this,d);B.call(this,d,e);e=A.call(this,d);a.attributeChangedCallback(this,d,g,e,null)};Element.prototype.setAttributeNS=function(d,e,g){if(1!==this.__CE_state)return E.call(this,\nd,e,g);var h=D.call(this,d,e);E.call(this,d,e,g);g=D.call(this,d,e);a.attributeChangedCallback(this,e,h,g,d)};Element.prototype.removeAttribute=function(d){if(1!==this.__CE_state)return C.call(this,d);var e=A.call(this,d);C.call(this,d);null!==e&&a.attributeChangedCallback(this,d,e,null,null)};Element.prototype.removeAttributeNS=function(d,e){if(1!==this.__CE_state)return F.call(this,d,e);var g=D.call(this,d,e);F.call(this,d,e);var h=D.call(this,d,e);g!==h&&a.attributeChangedCallback(this,e,g,h,d)};\nna?c(HTMLElement.prototype,na):G&&c(Element.prototype,G);oa?f(HTMLElement.prototype,oa):H&&f(Element.prototype,H);Z(a,Element.prototype,{prepend:fa,append:ha});Ca(a)};var Ea={};function Fa(a){function b(){var c=this.constructor;var f=document.__CE_registry.u.get(c);if(!f)throw Error("Failed to construct a custom element: The constructor was not registered with `customElements`.");var d=f.constructionStack;if(0===d.length)return d=n.call(document,f.localName),Object.setPrototypeOf(d,c.prototype),d.__CE_state=1,d.__CE_definition=f,R(a,d),d;var e=d.length-1,g=d[e];if(g===Ea)throw Error("Failed to construct \'"+f.localName+"\': This element was already constructed.");d[e]=Ea;\nObject.setPrototypeOf(g,c.prototype);R(a,g);return g}b.prototype=ma.prototype;Object.defineProperty(HTMLElement.prototype,"constructor",{writable:!0,configurable:!0,enumerable:!1,value:b});window.HTMLElement=b};function Ga(a){function b(c,f){Object.defineProperty(c,"textContent",{enumerable:f.enumerable,configurable:!0,get:f.get,set:function(d){if(this.nodeType===Node.TEXT_NODE)f.set.call(this,d);else{var e=void 0;if(this.firstChild){var g=this.childNodes,h=g.length;if(0<h&&J(this)){e=Array(h);for(var k=0;k<h;k++)e[k]=g[k]}}f.set.call(this,d);if(e)for(d=0;d<e.length;d++)U(a,e[d])}}})}Node.prototype.insertBefore=function(c,f){if(c instanceof DocumentFragment){var d=K(c);c=t.call(this,c,f);if(J(this))for(f=\n0;f<d.length;f++)S(a,d[f]);return c}d=c instanceof Element&&J(c);f=t.call(this,c,f);d&&U(a,c);J(this)&&S(a,c);return f};Node.prototype.appendChild=function(c){if(c instanceof DocumentFragment){var f=K(c);c=r.call(this,c);if(J(this))for(var d=0;d<f.length;d++)S(a,f[d]);return c}f=c instanceof Element&&J(c);d=r.call(this,c);f&&U(a,c);J(this)&&S(a,c);return d};Node.prototype.cloneNode=function(c){c=q.call(this,!!c);this.ownerDocument.__CE_registry?V(a,c):Q(a,c);return c};Node.prototype.removeChild=function(c){var f=\nc instanceof Element&&J(c),d=u.call(this,c);f&&U(a,c);return d};Node.prototype.replaceChild=function(c,f){if(c instanceof DocumentFragment){var d=K(c);c=v.call(this,c,f);if(J(this))for(U(a,f),f=0;f<d.length;f++)S(a,d[f]);return c}d=c instanceof Element&&J(c);var e=v.call(this,c,f),g=J(this);g&&U(a,f);d&&U(a,c);g&&S(a,c);return e};w&&w.get?b(Node.prototype,w):sa(a,function(c){b(c,{enumerable:!0,configurable:!0,get:function(){for(var f=[],d=this.firstChild;d;d=d.nextSibling)d.nodeType!==Node.COMMENT_NODE&&\nf.push(d.textContent);return f.join("")},set:function(f){for(;this.firstChild;)u.call(this,this.firstChild);null!=f&&""!==f&&r.call(this,document.createTextNode(f))}})})};var O=window.customElements;function Ha(){var a=new N;Fa(a);Ba(a);Z(a,DocumentFragment.prototype,{prepend:da,append:ea});Ga(a);Da(a);a=new Y(a);document.__CE_registry=a;Object.defineProperty(window,"customElements",{configurable:!0,enumerable:!0,value:a})}O&&!O.forcePolyfill&&"function"==typeof O.define&&"function"==typeof O.get||Ha();window.__CE_installPolyfill=Ha;\n}).call(self);\n\n//# sourceMappingURL=custom-elements.min.js.map\n\n\n//# sourceURL=webpack:///./node_modules/@webcomponents/custom-elements/custom-elements.min.js?')},"./node_modules/intersection-observer-polyfill/index.js":/*!**************************************************************!*\
  !*** ./node_modules/intersection-observer-polyfill/index.js ***!
  \**************************************************************//*! exports provided: default */function(module,__webpack_exports__,__webpack_require__){'use strict';eval('__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _src_IntersectionObserver__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/IntersectionObserver */ "./node_modules/intersection-observer-polyfill/src/IntersectionObserver.js");\n\r\n\r\nlet IntersectionObserver;\r\n\r\n// Define what implementation of IntersectionObserver\r\n// needs to be exported: existing or polyfilled.\r\nif (typeof window.IntersectionObserver === \'function\') {\r\n    // Export existing IntersectionObservers\' implementation.\r\n    IntersectionObserver = window.IntersectionObserver;\r\n} else {\r\n    // Export polyfill.\r\n    IntersectionObserver = _src_IntersectionObserver__WEBPACK_IMPORTED_MODULE_0__["default"];\r\n}\r\n\r\n/* harmony default export */ __webpack_exports__["default"] = (IntersectionObserver);\n\n//# sourceURL=webpack:///./node_modules/intersection-observer-polyfill/index.js?')},"./node_modules/intersection-observer-polyfill/src/IntersectionObservation.js":/*!************************************************************************************!*\
  !*** ./node_modules/intersection-observer-polyfill/src/IntersectionObservation.js ***!
  \************************************************************************************//*! exports provided: default */function(module,__webpack_exports__,__webpack_require__){'use strict';eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return IntersectionObservation; });\n/* harmony import */ var _shims_performance_now__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./shims/performance.now */ "./node_modules/intersection-observer-polyfill/src/shims/performance.now.js");\n/* harmony import */ var _geometry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./geometry */ "./node_modules/intersection-observer-polyfill/src/geometry.js");\n/* harmony import */ var _IntersectionObserverEntry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./IntersectionObserverEntry */ "./node_modules/intersection-observer-polyfill/src/IntersectionObserverEntry.js");\n\r\n\r\n\r\n\r\nconst emptyRect = Object(_geometry__WEBPACK_IMPORTED_MODULE_1__["createRectangle"])();\r\n\r\n/**\r\n * Tells whether target is a descendant of container element\r\n * and that both of them are present in DOM.\r\n *\r\n * @param {Element} container - Container element.\r\n * @param {Element} target - Target element.\r\n * @returns {Boolean}\r\n */\r\nfunction isDetached(container, target) {\r\n    const docElement = document.documentElement;\r\n\r\n    return (\r\n        container !== docElement && !docElement.contains(container) ||\r\n        !container.contains(target)\r\n    );\r\n}\r\n\r\n/**\r\n * Computes intersection rectangle between two rectangles.\r\n *\r\n * @param {ClientRect} rootRect - Rectangle of container element.\r\n * @param {ClientRect} targetRect - Rectangle of target element.\r\n * @returns {ClientRect} Intersection rectangle.\r\n */\r\nfunction computeIntersection(rootRect, targetRect) {\r\n    const left      = Math.max(targetRect.left, rootRect.left);\r\n    const right     = Math.min(targetRect.right, rootRect.right);\r\n    const top       = Math.max(targetRect.top, rootRect.top);\r\n    const bottom    = Math.min(targetRect.bottom, rootRect.bottom);\r\n\r\n    const width = right - left;\r\n    const height = bottom - top;\r\n\r\n    return Object(_geometry__WEBPACK_IMPORTED_MODULE_1__["createRectangle"])(left, top, width, height);\r\n}\r\n\r\n/**\r\n * Finds intersection rectangle of provided elements.\r\n *\r\n * @param {Element} container - Container element.\r\n * @param {Element} target - Target element.\r\n * @param {ClientRect} targetRect - Rectangle of target element.\r\n * @param {ClientRect} containterRect - Rectangle of container element.\r\n */\r\nfunction getIntersection(container, target, containterRect, targetRect) {\r\n    let intersecRect    = targetRect,\r\n        parent          = target.parentNode,\r\n        rootReached     = false;\r\n\r\n    while (!rootReached) {\r\n        let parentRect = null;\r\n\r\n        if (parent === container || parent.nodeType !== 1) {\r\n            rootReached = true;\r\n            parentRect = containterRect;\r\n        } else if (window.getComputedStyle(parent).overflow !== \'visible\') {\r\n            parentRect = Object(_geometry__WEBPACK_IMPORTED_MODULE_1__["getRectangle"])(parent);\r\n        }\r\n\r\n        if (parentRect) {\r\n            intersecRect = computeIntersection(intersecRect, parentRect);\r\n        }\r\n\r\n        parent = parent.parentNode;\r\n    }\r\n\r\n    return intersecRect;\r\n}\r\n\r\n/**\r\n * This class is responsible for computing and keeping track of intersections\r\n * between target element and its container. It will create and queue for notification\r\n * new IntersectionObserverEntry when intersection ratio reaches new thresholded value.\r\n */\r\nclass IntersectionObservation {\r\n    /**\r\n     * Creates instance of IntersectionObservation.\r\n     *\r\n     * @param {Element} target - Element being observed.\r\n     * @param {IntersectionObserver} observer - Associated IntersectionObserver.\r\n     */\r\n    constructor(target, observer) {\r\n        this.target = target;\r\n        this.observer = observer;\r\n\r\n        this.prevTargetRect = emptyRect;\r\n        this.prevThreshold = 0;\r\n        this.prevRatio = 0;\r\n    }\r\n\r\n    /**\r\n     * Updates intersection data. Creates and queues new\r\n     * IntersectionObserverEntry if intersection threshold has changed.\r\n     *\r\n     * @param {Object} root - Element for which to compute intersection.\r\n     * @param {ClientRect} rootRect - Rectangle of root element.\r\n     * @returns {Object} An object with information about detected changes:\r\n     *  {\r\n     *      ratioChanged: boolean,\r\n     *      targetRectChanged: boolean,\r\n     *      thresholdChanged: boolean\r\n     *  }\r\n     */\r\n    updateIntersection(root, rootRect) {\r\n        let targetRect          = Object(_geometry__WEBPACK_IMPORTED_MODULE_1__["getRectangle"])(this.target),\r\n            intersection        = this.getIntersectionData(root, rootRect, targetRect),\r\n            threshold           = +intersection.exists,\r\n            ratioChanged        = intersection.ratio !== this.prevRatio,\r\n            targetRectChanged   = !Object(_geometry__WEBPACK_IMPORTED_MODULE_1__["isEqual"])(targetRect, this.prevTargetRect),\r\n            thresholdChanged;\r\n\r\n        // Find thresholds\' index if intersection\r\n        // and target rectangles are not empty.\r\n        if (intersection.exists && !Object(_geometry__WEBPACK_IMPORTED_MODULE_1__["isEmpty"])(targetRect)) {\r\n            threshold = this.observer.getThresholdGreaterThan(intersection.ratio);\r\n        }\r\n\r\n        thresholdChanged = threshold !== this.prevThreshold;\r\n\r\n        // Update cached properties.\r\n        this.prevTargetRect = targetRect;\r\n        this.prevThreshold = threshold;\r\n        this.prevRatio = intersection.ratio;\r\n\r\n        // Create an empty rectangle if there is no intersection.\r\n        if (!intersection.exists) {\r\n            intersection.ratio = 0;\r\n            intersection.rect = emptyRect;\r\n        }\r\n\r\n        // Create and queue new entry if threshold has changed.\r\n        if (thresholdChanged) {\r\n            const entry = new _IntersectionObserverEntry__WEBPACK_IMPORTED_MODULE_2__["default"](\r\n                this.target,\r\n                targetRect,\r\n                intersection.rect,\r\n                intersection.ratio,\r\n                rootRect,\r\n                Object(_shims_performance_now__WEBPACK_IMPORTED_MODULE_0__["default"])()\r\n            );\r\n\r\n            this.observer.queueEntry(entry);\r\n        }\r\n\r\n        return {ratioChanged, thresholdChanged, targetRectChanged};\r\n    }\r\n\r\n    /**\r\n     * Computes intersection data.\r\n     *\r\n     * @param {Element} container - Container element.\r\n     * @param {ClientRect} [containterRect]\r\n     * @param {ClientRect} [targetRect]\r\n     * @returns {Object}\r\n     */\r\n    getIntersectionData(container, containterRect, targetRect) {\r\n        const target = this.target;\r\n\r\n        if (!targetRect) {\r\n            targetRect = Object(_geometry__WEBPACK_IMPORTED_MODULE_1__["getRectangle"])(this.target);\r\n        }\r\n\r\n        if (!containterRect) {\r\n            containterRect = Object(_geometry__WEBPACK_IMPORTED_MODULE_1__["getRectangle"])(container);\r\n        }\r\n\r\n        let detached        = isDetached(container, target),\r\n            intersecRect    = !detached ? getIntersection(container, target, containterRect, targetRect) : emptyRect,\r\n            intersects      = !detached && intersecRect.width >= 0 && intersecRect.height >= 0,\r\n            intersecRatio   = Object(_geometry__WEBPACK_IMPORTED_MODULE_1__["getArea"])(intersecRect) / Object(_geometry__WEBPACK_IMPORTED_MODULE_1__["getArea"])(targetRect) || 0;\r\n\r\n        return {\r\n            rect: intersecRect,\r\n            ratio: intersecRatio,\r\n            exists: intersects\r\n        };\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./node_modules/intersection-observer-polyfill/src/IntersectionObservation.js?')},"./node_modules/intersection-observer-polyfill/src/IntersectionObserver.js":/*!*********************************************************************************!*\
  !*** ./node_modules/intersection-observer-polyfill/src/IntersectionObserver.js ***!
  \*********************************************************************************//*! exports provided: default */function(module,__webpack_exports__,__webpack_require__){'use strict';eval('__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _shims_es6_collections__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./shims/es6-collections */ "./node_modules/intersection-observer-polyfill/src/shims/es6-collections.js");\n/* harmony import */ var _IntersectionObserverController__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./IntersectionObserverController */ "./node_modules/intersection-observer-polyfill/src/IntersectionObserverController.js");\n/* harmony import */ var _IntersectionObserver__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./_IntersectionObserver */ "./node_modules/intersection-observer-polyfill/src/_IntersectionObserver.js");\n\r\n\r\n\r\n\r\n// This controllers\' instance will be assigned to all IntersectionObservers\r\nconst controller = new _IntersectionObserverController__WEBPACK_IMPORTED_MODULE_1__["default"]();\r\n\r\n// Registry of internal observers.\r\nconst observers = new _shims_es6_collections__WEBPACK_IMPORTED_MODULE_0__["WeakMap"]();\r\n\r\n/**\r\n * IntersectionObservers\' "Proxy" class which is meant to hide private\r\n * properties and methods from IntersectionObserver instances.\r\n *\r\n * Additionally it implements "idleTimeout" and "trackHovers" static property\r\n * accessors to give a control over the behavior of IntersectionObserverController\r\n * instance. Changes made to these properties will affect both future and\r\n * existing instances of IntersectionObserver.\r\n */\r\nclass IntersectionObserver {\r\n    /**\r\n     * Creates instance of public IntersectionObserver.\r\n     *\r\n     * @param {Function} callback\r\n     * @param {Object} options\r\n     */\r\n    constructor(callback, options) {\r\n        if (!arguments.length) {\r\n            throw new TypeError("1 argument required, but only 0 present.");\r\n        }\r\n\r\n        const observer = new _IntersectionObserver__WEBPACK_IMPORTED_MODULE_2__["default"](callback, options, controller, this);\r\n\r\n        // Due to the spec following properties are non-writable\r\n        // and in native implementation they are also not enumerable.\r\n        Object.defineProperties(this, {\r\n            root:       {value: observer.root},\r\n            thresholds: {value: observer.thresholds},\r\n            rootMargin: {value: observer.rootMargin}\r\n        });\r\n\r\n        // Register internal observer.\r\n        observers.set(this, observer);\r\n    }\r\n\r\n    /**\r\n     * Extracts controllers\' idle timeout value.\r\n     *\r\n     * @returns {Number}\r\n     */\r\n    static get idleTimeout() {\r\n        return controller.idleTimeout;\r\n    }\r\n\r\n    /**\r\n     * Sets up new idle timeout.\r\n     *\r\n     * @param {Number} value - New timeout value.\r\n     */\r\n    static set idleTimeout(value) {\r\n        if (typeof value !== \'number\') {\r\n            throw new TypeError(\'type of "idleTimeout" value must be a number.\');\r\n        }\r\n\r\n        if (typeof value < 0) {\r\n            throw new TypeError(\'"idleTimeout" value must be greater than 0.\');\r\n        }\r\n\r\n        controller.idleTimeout = value;\r\n    }\r\n\r\n    /**\r\n     * Tells whether controller tracks "hover" events.\r\n     *\r\n     * @returns {Boolean}\r\n     */\r\n    static get trackHovers() {\r\n        return controller.isHoverEnabled();\r\n    }\r\n\r\n    /**\r\n     * Enables or disables tracking of "hover" event.\r\n     *\r\n     * @param {Boolean} value - Whether to disable or enable tracking.\r\n     */\r\n    static set trackHovers(value) {\r\n        if (typeof value !== \'boolean\') {\r\n            throw new TypeError(\'type of "trackHovers" value must be a boolean.\');\r\n        }\r\n\r\n        value ?\r\n            controller.enableHover() :\r\n            controller.disableHover();\r\n    }\r\n}\r\n\r\n// Expose public methods of IntersectionObserver.\r\n[\r\n    \'observe\',\r\n    \'unobserve\',\r\n    \'disconnect\',\r\n    \'takeRecords\'\r\n].forEach(method => {\r\n    IntersectionObserver.prototype[method] = function () {\r\n        return observers.get(this)[method](...arguments);\r\n    };\r\n});\r\n\r\n/* harmony default export */ __webpack_exports__["default"] = (IntersectionObserver);\r\n\n\n//# sourceURL=webpack:///./node_modules/intersection-observer-polyfill/src/IntersectionObserver.js?')},"./node_modules/intersection-observer-polyfill/src/IntersectionObserverController.js":/*!*******************************************************************************************!*\
  !*** ./node_modules/intersection-observer-polyfill/src/IntersectionObserverController.js ***!
  \*******************************************************************************************//*! exports provided: default */function(module,__webpack_exports__,__webpack_require__){'use strict';eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return IntersectionObserverController; });\n/* harmony import */ var _shims_performance_now__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./shims/performance.now */ "./node_modules/intersection-observer-polyfill/src/shims/performance.now.js");\n\r\n\r\nconst mutationsSupported = typeof window.MutationObserver === \'function\';\r\n\r\n/**\r\n * A shim for requestAnimationFrame which falls back\r\n * to setTimeout if the first one is not supported.\r\n *\r\n * @returns {Number} Request identifier.\r\n */\r\nconst requestAnimFrame = (function () {\r\n    if (window.requestAnimationFrame) {\r\n        return window.requestAnimationFrame;\r\n    }\r\n\r\n    return callback => {\r\n        return setTimeout(() => callback(Object(_shims_performance_now__WEBPACK_IMPORTED_MODULE_0__["default"])()), 1000 / 60);\r\n    };\r\n})();\r\n\r\n/**\r\n * Creates a wrapper function that ensures that\r\n * provided callback will be invoked only after\r\n * the specified delay.\r\n *\r\n * @param {Function} callback\r\n * @param {Number} [delay = 0]\r\n * @returns {Function}\r\n */\r\nfunction debounce(callback, delay = 0) {\r\n    let timeoutID = false;\r\n\r\n    return function (...args) {\r\n        if (timeoutID !== false) {\r\n            clearTimeout(timeoutID);\r\n        }\r\n\r\n        timeoutID = setTimeout(() => {\r\n            timeoutID = false;\r\n\r\n            callback.apply(this, args);\r\n        }, delay);\r\n    };\r\n}\r\n\r\n/**\r\n * Controller class that is used to handle updates of registered IntersectionObservers.\r\n * It controls when and for how long it\'s necessary to run updates of observations\r\n * by listening to various events on window along with DOM mutations\r\n * (nodes removal, changes of attributes, etc.).\r\n  *\r\n * CSS transitions and animations are handled by running the update cycle\r\n * until position of DOM elements, added to connected observers, keeps changing\r\n * or until the idle timeout is reached (default timeout is 50 milliseconds).\r\n * Timeout value can be manually increased if transitions have a delay.\r\n *\r\n * Tracking of changes made by ":hover" class is optional and can be\r\n * enabled by invoking the "enableHover" method.\r\n *\r\n * Infinite update cycle along with a listener of "click" event will be used in case when\r\n * MutatioObserver is not supported.\r\n */\r\nclass IntersectionObserverController {\r\n    /**\r\n     * Creates new IntersectionObserverController instance.\r\n     *\r\n     * @param {Number} [idleTimeout = 50]\r\n     * @pram {Boolean} [trackHovers = false] - Whether to track "mouseover"\r\n     *      events or not. Disabled be default.\r\n     */\r\n    constructor(idleTimeout = 50, trackHovers = false) {\r\n        this._idleTimeout = idleTimeout;\r\n        this._trackHovers = trackHovers;\r\n        this._cycleStartTime = -1;\r\n\r\n        // Indicates whether the update of observers is scheduled.\r\n        this._isUpdateScheduled = false;\r\n\r\n        // Indicates whether infinite cycles are enabled.\r\n        this._repeatCycle = false;\r\n\r\n        // Indicates whether "mouseover" event handler was added.\r\n        this._hoverInitiated = false;\r\n\r\n        // Keeps reference to the instance of MutationObserver.\r\n        this._mutationsObserver = null;\r\n\r\n        // Indicates whether DOM listeners were initiated.\r\n        this._isListening = false;\r\n\r\n        // A list of connected observers.\r\n        this._observers = [];\r\n\r\n        // Fix value of "this" binding for the following methods.\r\n        this.startUpdateCycle = this.startUpdateCycle.bind(this);\r\n        this.scheduleUpdate = this.scheduleUpdate.bind(this);\r\n        this._onMutation = this._onMutation.bind(this);\r\n\r\n        // Function that will be invoked to re-rerun the update cycle\r\n        // if repeatable cycles are enabled.\r\n        this._repeatHandler = debounce(this.scheduleUpdate, 200);\r\n\r\n        // "mouseover" event handler.\r\n        this._onMouseOver = debounce(this.startUpdateCycle, 200);\r\n    }\r\n\r\n    /**\r\n     * Returns current idle timeout value.\r\n     *\r\n     * @returns {Number}\r\n     */\r\n    get idleTimeout() {\r\n        return this._idleTimeout;\r\n    }\r\n\r\n    /**\r\n     * Sets up new idle timeout value.\r\n     *\r\n     * @param {Number} value - New timeout value.\r\n     */\r\n    set idleTimeout(value) {\r\n        this._idleTimeout = value;\r\n    }\r\n\r\n    /**\r\n     * Adds observer to observers list.\r\n     *\r\n     * @param {IntersectionObserver} observer - Observer to be added.\r\n     */\r\n    connect(observer) {\r\n        if (!this.isConnected(observer)) {\r\n            this._observers.push(observer);\r\n        }\r\n\r\n        // Instantiate listeners if they\r\n        // weren\'t instantiated yet.\r\n        if (!this._isListening) {\r\n            this._initListeners();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Removes observer from observers list.\r\n     *\r\n     * @param {IntersectionObserver} observer - Observer to be removed.\r\n     */\r\n    disconnect(observer) {\r\n        let observers = this._observers,\r\n            index = observers.indexOf(observer);\r\n\r\n        if (~index) {\r\n            observers.splice(index, 1);\r\n        }\r\n\r\n        // Remove listeners if controller\r\n        // has no connected observers.\r\n        if (!observers.length && this._isListening) {\r\n            this._removeListeners();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Tells whether provided observer is connected to controller.\r\n     *\r\n     * @param {IntersectionObserver} observer - Observer to be checked.\r\n     * @returns {Boolean}\r\n     */\r\n    isConnected(observer) {\r\n        return !!~this._observers.indexOf(observer);\r\n    }\r\n\r\n    /**\r\n     * Updates every observer from observers list and\r\n     * notifies them of queued entries.\r\n     *\r\n     * @private\r\n     * @returns {Boolean} Returns "true" if any observer\r\n     *      has detected changes in position of its elements.\r\n     */\r\n    _updateObservers() {\r\n        let hasChanges = false;\r\n\r\n        for (const observer of this._observers) {\r\n            if (observer.updateObservations()) {\r\n                hasChanges = true;\r\n            }\r\n\r\n            if (observer.hasEntries()) {\r\n                observer.notifySubscriber();\r\n            }\r\n        }\r\n\r\n        return hasChanges;\r\n    }\r\n\r\n    /**\r\n     * Schedules new update cycle.\r\n     */\r\n    startUpdateCycle() {\r\n        this._cycleStartTime = Object(_shims_performance_now__WEBPACK_IMPORTED_MODULE_0__["default"])();\r\n\r\n        this.scheduleUpdate();\r\n    }\r\n\r\n    /**\r\n     * Controls invocation of "_updateObservers" method.\r\n     * It will re-invoke itself in the following cases:\r\n     *      - Update of observers detected changes in elements position.\r\n     *        In this case we need to postpone cycle end time in order to ensure\r\n     *        that we won\'t miss next iteration of animations.\r\n     *\r\n     *      - Idle timeout wasn\'t reached yet.\r\n     *        In this case we need to schedule new single update\r\n     *        because changes may be delayed.\r\n     *\r\n     * @param {Number} [timestamp] - Internal parameter\r\n     *      that is used to define whether method was invoked\r\n     *      as a callback of requestAnimationFrame.\r\n     */\r\n    scheduleUpdate(timestamp) {\r\n        let calledFromRAF = typeof timestamp === \'number\';\r\n\r\n        // Invoke the update of observers only if function\r\n        // was called as a requestAnimationFrame callback.\r\n        if (calledFromRAF) {\r\n            const hasChanges = this._updateObservers();\r\n\r\n            this._isUpdateScheduled = false;\r\n\r\n            // Do nothing if cycle wasn\'t started.\r\n            if (!this._wasCycleStarted()) {\r\n                return;\r\n            }\r\n\r\n            if (hasChanges) {\r\n                // Postpone cycle end time if changes were detected.\r\n                this.startUpdateCycle();\r\n            } else if (!this._hasIdleTimeEnded()) {\r\n                // Schedule new single update if cycle timeout wasn\'t reached yet.\r\n                this.scheduleUpdate();\r\n            } else {\r\n                // Finish cycle.\r\n                this._onCycleEnded();\r\n            }\r\n        } else if (!this._isUpdateScheduled) {\r\n            // Request new update if it wasn\'t requested already.\r\n            requestAnimFrame(this.scheduleUpdate);\r\n\r\n            this._isUpdateScheduled = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Tells whether cycle has reached its idle timeout.\r\n     *\r\n     * @private\r\n     * @returns {Boolean}\r\n     */\r\n    _hasIdleTimeEnded() {\r\n        return Object(_shims_performance_now__WEBPACK_IMPORTED_MODULE_0__["default"])() - this._cycleStartTime > this._idleTimeout;\r\n    }\r\n\r\n    /**\r\n     * Tells whether the update cycle is currently running.\r\n     *\r\n     * @private\r\n     * @returns {Boolean}\r\n     */\r\n    _wasCycleStarted() {\r\n        return this._cycleStartTime !== -1;\r\n    }\r\n\r\n    /**\r\n     * Callback that will be invoked after the update cycle is finished.\r\n     *\r\n     * @private\r\n     */\r\n    _onCycleEnded() {\r\n        // Mark that update cycle is not running.\r\n        this._cycleStartTime = -1;\r\n\r\n        if (this._repeatCycle) {\r\n            // Time is set to \'0\' because we want to automatically\r\n            // start update cycle when single update detects changes.\r\n            this._cycleStartTime = 0;\r\n\r\n            this._repeatHandler();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Initializes DOM listeners.\r\n     *\r\n     * @private\r\n     */\r\n    _initListeners() {\r\n        // Do nothing if listeners are already initiated.\r\n        if (this._isListening) {\r\n            return;\r\n        }\r\n\r\n        this._isListening = true;\r\n\r\n        // Use update cycle here instead of a single update because we may encounter\r\n        // with delayed changes, e.g. when width or height of an\r\n        // element are changed by CSS transitions.\r\n        window.addEventListener(\'resize\', this.startUpdateCycle, true);\r\n\r\n        window.addEventListener(\'scroll\', this.scheduleUpdate, true);\r\n\r\n        // Listen to possible changes made by ":hover" class.\r\n        if (this._trackHovers) {\r\n            this._addHoverListener();\r\n        }\r\n\r\n        // Fall back to repeatable cycle with additional tracking of\r\n        // "click" event if MutationObserver is not supported.\r\n        if (!mutationsSupported) {\r\n            this._repeatCycle = true;\r\n\r\n            // Listen to clicks as they may cause changes in elements position.\r\n            window.addEventListener(\'click\', this.startUpdateCycle, true);\r\n\r\n            // Manually start cycle.\r\n            this.startUpdateCycle();\r\n        } else {\r\n            // Subscribe to DOM mutations as they may lead to changes in position of elements.\r\n            this._mutationsObserver = new MutationObserver(this._onMutation);\r\n\r\n            this._mutationsObserver.observe(document, {\r\n                attributes: true,\r\n                childList: true,\r\n                characterData: true,\r\n                subtree: true\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Removes all DOM listeners.\r\n     *\r\n     * @private\r\n     */\r\n    _removeListeners() {\r\n        // Do nothing if listeners were already removed.\r\n        if (!this._isListening) {\r\n            return;\r\n        }\r\n\r\n        window.removeEventListener(\'resize\', this.startUpdateCycle, true);\r\n        window.removeEventListener(\'scroll\', this.scheduleUpdate, true);\r\n\r\n        this._removeHoverListener();\r\n\r\n        if (!mutationsSupported) {\r\n            this._repeatCycle = false;\r\n\r\n            window.removeEventListener(\'click\', this.startUpdateCycle, true);\r\n        } else if (this._mutationsObserver) {\r\n            this._mutationsObserver.disconnect();\r\n            this._mutationsObserver = null;\r\n        }\r\n\r\n        this._isListening = false;\r\n    }\r\n\r\n    /**\r\n     * Enables hover listener.\r\n     */\r\n    enableHover() {\r\n        this._trackHovers = true;\r\n\r\n        // Manually add hover listener\r\n        // if listeners were already initiated.\r\n        if (this._isListening) {\r\n            this._addHoverListener();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Disables hover listener.\r\n     */\r\n    disableHover() {\r\n        this._trackHovers = false;\r\n\r\n        this._removeHoverListener();\r\n    }\r\n\r\n    /**\r\n     * Tells whether hover listener is enabled.\r\n     *\r\n     * @returns {Boolean}\r\n     */\r\n    isHoverEnabled() {\r\n        return this._trackHovers;\r\n    }\r\n\r\n    /**\r\n     * Adds "mouseover" listener if it wasn\'t already added.\r\n     *\r\n     * @private\r\n     */\r\n    _addHoverListener() {\r\n        if (this._hoverInitiated) {\r\n            return;\r\n        }\r\n\r\n        window.addEventListener(\'mouseover\', this._onMouseOver, true);\r\n\r\n        this._hoverInitiated = true;\r\n    }\r\n\r\n    /**\r\n     * Removes "mouseover" listener if it was added previously.\r\n     *\r\n     * @private\r\n     */\r\n    _removeHoverListener() {\r\n        if (!this._hoverInitiated) {\r\n            return;\r\n        }\r\n\r\n        window.removeEventListener(\'mouseover\', this._onMouseOver, true);\r\n\r\n        this._hoverInitiated = false;\r\n    }\r\n\r\n    /**\r\n     * DOM mutations handler.\r\n     *\r\n     * @private\r\n     * @param {Array<MutationRecord>} entries\r\n     */\r\n    _onMutation(entries) {\r\n        const runSingleUpdate = entries.every(entry => {\r\n            return entry.type !== \'attributes\';\r\n        });\r\n\r\n        // Schedule single update if attributes (class, style, etc.)\r\n        // were not changed. Otherwise run update cycle because\r\n        // animations are expected to appear only in this case.\r\n        runSingleUpdate ?\r\n            this.scheduleUpdate() :\r\n            this.startUpdateCycle();\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./node_modules/intersection-observer-polyfill/src/IntersectionObserverController.js?')},"./node_modules/intersection-observer-polyfill/src/IntersectionObserverEntry.js":/*!**************************************************************************************!*\
  !*** ./node_modules/intersection-observer-polyfill/src/IntersectionObserverEntry.js ***!
  \**************************************************************************************//*! exports provided: default */function(module,__webpack_exports__,__webpack_require__){'use strict';eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return IntersectionObserverEntry; });\n/* harmony import */ var _geometry__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./geometry */ "./node_modules/intersection-observer-polyfill/src/geometry.js");\n\r\n\r\nclass IntersectionObserverEntry {\r\n    /**\r\n     * Creates new instance of IntersectionObserverEntry.\r\n     *\r\n     * @param {Element} target\r\n     * @param {ClientRect} targetRect\r\n     * @param {ClientRect} intersecRect\r\n     * @param {Number} intersecRatio\r\n     * @param {ClientRect} rootBounds\r\n     * @param {Timestamp} time\r\n     */\r\n    constructor(target, targetRect, intersecRect, intersecRatio, rootBounds, time) {\r\n\r\n        // According to the spec following properties are not writable and\r\n        // in native implementation they are also not enumerable.\r\n        Object.defineProperties(this, {\r\n            boundingClientRect: {value: targetRect},\r\n            intersectionRatio:  {value: intersecRatio},\r\n            intersectionRect:   {value: Object(_geometry__WEBPACK_IMPORTED_MODULE_0__["mapToClientRect"])(intersecRect)},\r\n            rootBounds:         {value: Object(_geometry__WEBPACK_IMPORTED_MODULE_0__["mapToClientRect"])(rootBounds)},\r\n            target:             {value: target},\r\n            time:               {value: time}\r\n        });\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./node_modules/intersection-observer-polyfill/src/IntersectionObserverEntry.js?')},"./node_modules/intersection-observer-polyfill/src/_IntersectionObserver.js":/*!**********************************************************************************!*\
  !*** ./node_modules/intersection-observer-polyfill/src/_IntersectionObserver.js ***!
  \**********************************************************************************//*! exports provided: default */function(module,__webpack_exports__,__webpack_require__){'use strict';eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return IntersectionObserver; });\n/* harmony import */ var _shims_es6_collections__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./shims/es6-collections */ "./node_modules/intersection-observer-polyfill/src/shims/es6-collections.js");\n/* harmony import */ var _geometry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./geometry */ "./node_modules/intersection-observer-polyfill/src/geometry.js");\n/* harmony import */ var _IntersectionObservation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./IntersectionObservation */ "./node_modules/intersection-observer-polyfill/src/IntersectionObservation.js");\n\r\n\r\n\r\n\r\n/**\r\n * Validates and parses threshold values.\r\n * Throws an error if one of the thresholds\r\n * is non-finite or not in range of 0 and 1.\r\n *\r\n * @param {(Array<Number>|Number)} [thresholds = 0]\r\n * @returns {Array<Number>} An array of thresholds in ascending order.\r\n */\r\nfunction parseThresholds(thresholds = 0) {\r\n    let result = thresholds;\r\n\r\n    if (!Array.isArray(thresholds)) {\r\n        result = [thresholds];\r\n    } else if (!thresholds.length) {\r\n        result = [0];\r\n    }\r\n\r\n    return result.map(threshold => {\r\n        // We use Number function instead of parseFloat\r\n        // to convert boolean values and null to theirs\r\n        // numeric representation. This is done to act\r\n        // in the same manner as a native implementation.\r\n        threshold = Number(threshold);\r\n\r\n        if (!window.isFinite(threshold)) {\r\n            throw new TypeError(\'The provided double value is non-finite.\');\r\n        } else if (threshold < 0 || threshold > 1) {\r\n            throw new RangeError(\'Threshold values must be between 0 and 1.\');\r\n        }\r\n\r\n        return threshold;\r\n    }).sort();\r\n}\r\n\r\n/**\r\n * Validates and converts margins value (defined in a form of\r\n * CSS \'margin\' property) to a list of tokens, e.g:\r\n * 1. \'0px\' = [[\'0px\'], [\'0px\'], [\'0px\'], [\'0px\']]\r\n * 2. \'5px 11px\' = [[\'5px\'], [\'11px\'], [\'5px\'], [\'11px\']]\r\n *\r\n * @param {String} [margins = \'0px\'] - Margins value to be processed.\r\n * @returns {Array<Array>} Object that contains both: a list of\r\n *      tokens and its string representation.\r\n */\r\nfunction parseMargins(margins = \'0px\') {\r\n    // Use regular expression in order to properly\r\n    // handle multiple spaces in-between of tokens: \'0px     2px   5px\'.\r\n    //\r\n    // Casting to a string is required to keep the behavior\r\n    // closer to the native implementation which converts\r\n    // an array like [[[\'2px 3px\']]] to \'2px 3px\';\r\n    margins = (margins + \'\').split(/\\s+/);\r\n\r\n    // Chrome validates tokens length starting from version 53.\r\n    if (margins.length > 4) {\r\n        throw new Error(\'Extra text found at the end of rootMargin.\');\r\n    }\r\n\r\n    margins[0] = margins[0] || \'0px\';\r\n    margins[1] = margins[1] || margins[0];\r\n    margins[2] = margins[2] || margins[0];\r\n    margins[3] = margins[3] || margins[1];\r\n\r\n    const rawData = margins.join(\' \');\r\n\r\n    const parsedData = margins.map(token => {\r\n        let [,value, unit] = /^(-?\\d*\\.?\\d+)(px|%)$/.exec(token) || [];\r\n        const pixels = unit === \'px\';\r\n\r\n        value = parseFloat(value);\r\n\r\n        if (!window.isFinite(value)) {\r\n            throw new Error(\'rootMargin must be specified in pixels or percent.\');\r\n        }\r\n\r\n        if (!pixels) {\r\n            value /= 100;\r\n        }\r\n\r\n        return {value, pixels};\r\n    });\r\n\r\n    return {rawData, parsedData};\r\n}\r\n\r\n/**\r\n * Creates new rectangle from provided one whose\r\n * dimensions will be modified by applying margins\r\n * defined in a form of [[value: Number, pixels: Boolean], ...].\r\n *\r\n * @param {ClientRect} targetRect - Initial rectangle.\r\n * @param {Array<Array>} margins - Margins data.\r\n * @returns {ClientRect} Modified rectangle.\r\n */\r\nfunction applyMargins(targetRect, margins) {\r\n    margins = margins.map((margin, index) => {\r\n        let value = margin.value;\r\n\r\n        if (!margin.pixels) {\r\n            value *= index % 2 ? targetRect.width : targetRect.height;\r\n        }\r\n\r\n        return value;\r\n    });\r\n\r\n    const result = {\r\n        top: targetRect.top - margins[0],\r\n        right: targetRect.right + margins[1],\r\n        bottom: targetRect.bottom + margins[2],\r\n        left: targetRect.left - margins[3]\r\n    };\r\n\r\n    result.width = result.right - result.left;\r\n    result.height = result.bottom - result.top;\r\n\r\n    return result;\r\n}\r\n\r\nclass IntersectionObserver {\r\n    /**\r\n     * Creates new IntersectionObserver instance.\r\n     *\r\n     * @param {Function} callback - Callback function that will be invoked\r\n     *      whenever one of the observed targets reaches new ratio value defined in "options.threshold".\r\n     * @param {Object} [options = {}] - Optional configuration.\r\n     * @param {IntersectionObserverController} controller - Associated controller instance.\r\n     * @param {IntersectionObserver} publicObserver - This value will be used as\r\n     *      a value of "this" binding for the callback function.\r\n     */\r\n    constructor(callback, options = {}, controller, publicObserver) {\r\n        if (typeof callback !== \'function\') {\r\n            throw new TypeError("The callback provided as parameter 1 is not a function.");\r\n        }\r\n\r\n        if (typeof options !== \'object\') {\r\n            throw new TypeError("parameter 2 is not an object.");\r\n        }\r\n\r\n        if (\'root\' in options && !(options.root instanceof Element)) {\r\n            throw new TypeError("member root is not of type Element.");\r\n        }\r\n\r\n\r\n        const thresholds = parseThresholds(options.threshold);\r\n        const rootMargin = parseMargins(options.rootMargin);\r\n\r\n        this.root = options.root || null;\r\n        this.rootMargin = rootMargin.rawData;\r\n\r\n        // Thresholds array needs to be immutable\r\n        // according to the native implementation.\r\n        this.thresholds = Object.freeze(thresholds);\r\n\r\n        this._root = options.root || document.documentElement;\r\n        this._callback = callback;\r\n        this._rootMargin = rootMargin.parsedData;\r\n\r\n        // Registry of observed elements and\r\n        // corresponding IntersectionObservation instances.\r\n        this._targets = new _shims_es6_collections__WEBPACK_IMPORTED_MODULE_0__["Map"]();\r\n\r\n        // A list of queued IntersectionObserverEntry\r\n        // items that will passed to the callback function.\r\n        this._quedEntries = [];\r\n\r\n        this._publicObserver = publicObserver || this;\r\n\r\n        this.controller = controller;\r\n    }\r\n\r\n    /**\r\n     * Adds provided target to observations list.\r\n     *\r\n     * @param {Element} target - DOM element to be observed.\r\n     */\r\n    observe(target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError(\'1 argument required, but only 0 present.\');\r\n        }\r\n\r\n        if (!(target instanceof Element)) {\r\n            throw new TypeError(\'parameter 1 is not of type "Element".\');\r\n        }\r\n\r\n        let targets = this._targets;\r\n\r\n        // Do nothing if target is already observed.\r\n        if (targets.has(target)) {\r\n            return;\r\n        }\r\n\r\n        // Create new IntersectionObservation instance and assign it\r\n        // to provided target.\r\n        targets.set(target, new _IntersectionObservation__WEBPACK_IMPORTED_MODULE_2__["default"](target, this));\r\n\r\n        // Connect current observer to controller\r\n        // if it wasn\'t connected yet.\r\n        if (!this.controller.isConnected(this)) {\r\n            this.controller.connect(this);\r\n        }\r\n\r\n        // Request the update of observers.\r\n        this.controller.startUpdateCycle();\r\n    }\r\n\r\n    /**\r\n     * Removes provided target from observations list.\r\n     *\r\n     * @param {Element} target - DOM element to stop observing.\r\n     */\r\n    unobserve(target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError(\'1 argument required, but only 0 present.\');\r\n        }\r\n\r\n        if (!(target instanceof Element)) {\r\n            throw new TypeError(\'parameter 1 is not of type "Element".\');\r\n        }\r\n\r\n        let targets = this._targets;\r\n\r\n        if (targets.has(target)) {\r\n            targets.delete(target);\r\n        }\r\n\r\n        // Disconnect observer if the list of observed targets is empty.\r\n        if (!targets.size) {\r\n            this.disconnect();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Removes all targets from observations list\r\n     * and disconnects observer from associated controller, i.e.\r\n     * no updates will be invoked for it.\r\n     */\r\n    disconnect() {\r\n        this._targets.clear();\r\n        this.controller.disconnect(this);\r\n    }\r\n\r\n    /**\r\n     * Returns a list of queued observation entries and\r\n     * clears the queue.\r\n     *\r\n     * @returns {Array}\r\n     */\r\n    takeRecords() {\r\n        return this._quedEntries.splice(0);\r\n    }\r\n\r\n    /**\r\n     * Invokes callback function with a list\r\n     * of queued entries if the last one is not empty.\r\n     *\r\n     * @private\r\n     */\r\n    notifySubscriber() {\r\n        const entries = this.takeRecords();\r\n        const publicObserver = this._publicObserver;\r\n\r\n        if (entries.length) {\r\n            this._callback.call(publicObserver, entries, publicObserver);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Adds entry to the queue.\r\n     *\r\n     * @param {IntersectionObserverEntry} entry\r\n     */\r\n    queueEntry(entry) {\r\n        this._quedEntries.push(entry);\r\n    }\r\n\r\n    /**\r\n     * Tells whether observer has queued entries.\r\n     *\r\n     * @returns {Boolean}\r\n     */\r\n    hasEntries() {\r\n        return !!this._quedEntries.length;\r\n    }\r\n\r\n    /**\r\n     * Updates intersection data of each observed target.\r\n     *\r\n     * @returns {Boolean} Returns "true" if intersection ratio or the rectangle of one of the\r\n     *      observed targets has changed. This information is required for\r\n     *      controller to decide whether to continue running the update cycle.\r\n     */\r\n    updateObservations() {\r\n        let root     = this._root,\r\n            rootRect = this.getRootRect(),\r\n            hasChanges = false;\r\n\r\n        this._targets.forEach(observation => {\r\n            const changes = observation.updateIntersection(root, rootRect);\r\n\r\n            if (changes.ratioChanged || changes.targetRectChanged) {\r\n                hasChanges = true;\r\n            }\r\n        });\r\n\r\n        return hasChanges;\r\n    }\r\n\r\n    /**\r\n     * Finds index of the first threshold whose value is greater than provided ratio.\r\n     * In case if there is no such value the amount of thresholds will be returned.\r\n     *\r\n     * @param {Number} ratio\r\n     * @returns {Number}\r\n     */\r\n    getThresholdGreaterThan(ratio) {\r\n        let thresholds = this.thresholds,\r\n            thresholdsLen = thresholds.length,\r\n            index = 0;\r\n\r\n        while (index < thresholdsLen && thresholds[index] <= ratio) {\r\n            ++index;\r\n        }\r\n\r\n        return index;\r\n    }\r\n\r\n    /**\r\n     * Calculates rectangle of root node with applied margins.\r\n     *\r\n     * @returns {ClientRect}\r\n     */\r\n    getRootRect() {\r\n        let rootRect = Object(_geometry__WEBPACK_IMPORTED_MODULE_1__["getRectangle"])(this._root);\r\n\r\n        return applyMargins(rootRect, this._rootMargin);\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./node_modules/intersection-observer-polyfill/src/_IntersectionObserver.js?')},"./node_modules/intersection-observer-polyfill/src/geometry.js":/*!*********************************************************************!*\
  !*** ./node_modules/intersection-observer-polyfill/src/geometry.js ***!
  \*********************************************************************//*! exports provided: mapToClientRect, createRectangle, getRectangle, getArea, isEmpty, isEqual */function(module,__webpack_exports__,__webpack_require__){'use strict';eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mapToClientRect", function() { return mapToClientRect; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createRectangle", function() { return createRectangle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getRectangle", function() { return getRectangle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getArea", function() { return getArea; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isEmpty", function() { return isEmpty; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isEqual", function() { return isEqual; });\n/**\r\n * From provided rectangle creates a new one whose\r\n * properties are not enumerable, configurable or writable.\r\n *\r\n * @param {ClientRect} rect - Initial rectangle.\r\n * @returns {ClientRect}\r\n */\r\nfunction mapToClientRect(rect) {\r\n    const descriptors = {};\r\n\r\n    for (const key of Object.keys(rect)) {\r\n        descriptors[key] = {value: rect[key]};\r\n    }\r\n\r\n    return Object.defineProperties({}, descriptors);\r\n}\r\n\r\n/**\r\n * Creates rectangle based on provided arguments.\r\n * If called without arguments then an empty rectangle\r\n * will be created.\r\n *\r\n * @param {Number} [left = 0] - Left position of rectangle.\r\n * @param {Number} [top = 0] - Top position of rectangle.\r\n * @param {Number} [width = 0] - Rectangles\' width.\r\n * @param {Number} [height = 0] - Rectangles\' height.\r\n * @returns {ClientRect}\r\n */\r\nfunction createRectangle(left = 0, top = 0, width = 0, height = 0) {\r\n    return {\r\n        left, top, width, height,\r\n        bottom: top + height,\r\n        right: left + width\r\n    };\r\n}\r\n\r\n/**\r\n * Returns client rectangle of provided element.\r\n * If element represents documentElement then returns\r\n * main viewport rectangle.\r\n *\r\n * @param {Element} target\r\n * @returns {ClientRect}\r\n */\r\nfunction getRectangle(target) {\r\n    if (target === document.documentElement) {\r\n        return createRectangle(0, 0, target.clientWidth, target.clientHeight);\r\n    }\r\n\r\n    return target.getBoundingClientRect();\r\n}\r\n\r\n/**\r\n * Calculates area of rectangle.\r\n *\r\n * @param {ClientRect} rect - Rectangle whose area needs to be calculated.\r\n * @returns {Number} Rectangles\' area.\r\n */\r\nfunction getArea(rect) {\r\n    return rect.width * rect.height;\r\n}\r\n\r\n/**\r\n * Tells whether rectangle is empty.\r\n *\r\n * @param {ClientRect} rect - Rectangle to be checked.\r\n * @returns {Boolean}\r\n */\r\nfunction isEmpty(rect) {\r\n    return rect.height === 0 && rect.width === 0;\r\n}\r\n\r\n/**\r\n * Compares rectangles to each other.\r\n *\r\n * @param {ClientRect} first\r\n * @param {ClientRect} second\r\n * @returns {Boolean}\r\n */\r\nfunction isEqual(first, second) {\r\n    return (\r\n        first.top === second.top &&\r\n        first.left === second.left &&\r\n        first.right === second.right &&\r\n        first.bottom === second.bottom\r\n    );\r\n}\r\n\n\n//# sourceURL=webpack:///./node_modules/intersection-observer-polyfill/src/geometry.js?')},"./node_modules/intersection-observer-polyfill/src/shims/es6-collections.js":/*!**********************************************************************************!*\
  !*** ./node_modules/intersection-observer-polyfill/src/shims/es6-collections.js ***!
  \**********************************************************************************//*! exports provided: Map, WeakMap */function(module,__webpack_exports__,__webpack_require__){'use strict';eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Map", function() { return Map; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WeakMap", function() { return WeakMap; });\n/**\r\n * Simple shims for WeakMap and Map classes.\r\n * This implementation is not meant to be used outside of IntersectionObserver modules\r\n * because it covers only limited range of use cases.\r\n */\r\n\r\nconst hasNativeCollections =\r\n    typeof window.WeakMap === \'function\' &&\r\n    typeof window.Map === \'function\';\r\n\r\nconst WeakMap = (function () {\r\n    if (hasNativeCollections) {\r\n        return window.WeakMap;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {Object} key\r\n     * @returns {Number}\r\n     */\r\n    function getIndex(arr, key) {\r\n        let result = -1;\r\n\r\n        arr.some((entry, index) => {\r\n            let matches = entry[0] === key;\r\n\r\n            if (matches) {\r\n                result = index;\r\n            }\r\n\r\n            return matches;\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    return class {\r\n        constructor() {\r\n            this.__entries__ = [];\r\n        }\r\n\r\n        /**\r\n         *\r\n         * @param {Object} key\r\n         * @returns {*}\r\n         */\r\n        get(key) {\r\n            let index = getIndex(this.__entries__, key);\r\n\r\n            return this.__entries__[index][1];\r\n        }\r\n\r\n        /**\r\n         *\r\n         * @param {Object} key\r\n         * @param {*} value\r\n         */\r\n        set(key, value) {\r\n            let index = getIndex(this.__entries__, key);\r\n\r\n            if (~index) {\r\n                this.__entries__[index][1] = value;\r\n            } else {\r\n                this.__entries__.push([key, value]);\r\n            }\r\n        }\r\n\r\n        /**\r\n         *\r\n         * @param {Object} key\r\n         */\r\n        delete(key) {\r\n            let entries = this.__entries__,\r\n                index = getIndex(entries, key);\r\n\r\n            if (~index) {\r\n                entries.splice(index, 1);\r\n            }\r\n        }\r\n\r\n        /**\r\n         *\r\n         * @param {Object} key\r\n         * @returns {Boolean}\r\n         */\r\n        has(key) {\r\n            return !!~getIndex(this.__entries__, key);\r\n        }\r\n    };\r\n})();\r\n\r\nconst Map = (function () {\r\n    if (hasNativeCollections) {\r\n        return window.Map;\r\n    }\r\n\r\n    return class extends WeakMap {\r\n        /**\r\n         *\r\n         * @returns {Number}\r\n         */\r\n        get size() {\r\n            return this.__entries__.length;\r\n        }\r\n\r\n        clear() {\r\n            this.__entries__.splice(0, this.__entries__.length);\r\n        }\r\n\r\n        /**\r\n         *\r\n         * @returns {Array<Array>}\r\n         */\r\n        entries() {\r\n            return this.__entries__.slice();\r\n        }\r\n\r\n        /**\r\n         *\r\n         * @returns {Array}\r\n         */\r\n        keys() {\r\n            return this.__entries__.map(entry => entry[0]);\r\n        }\r\n\r\n        /**\r\n         *\r\n         * @returns {Array}\r\n         */\r\n        values() {\r\n            return this.__entries__.map(entry => entry[1]);\r\n        }\r\n\r\n        /**\r\n         *\r\n         * @param {Function} callback\r\n         * @param {Object} [ctx = null]\r\n         */\r\n        forEach(callback, ctx = null) {\r\n            for (const entry of this.__entries__) {\r\n                callback.call(ctx, entry[1], entry[0]);\r\n            }\r\n        }\r\n    };\r\n})();\r\n\r\n\n\n//# sourceURL=webpack:///./node_modules/intersection-observer-polyfill/src/shims/es6-collections.js?')},"./node_modules/intersection-observer-polyfill/src/shims/performance.now.js":/*!**********************************************************************************!*\
  !*** ./node_modules/intersection-observer-polyfill/src/shims/performance.now.js ***!
  \**********************************************************************************//*! exports provided: default */function(module,__webpack_exports__,__webpack_require__){'use strict';eval('__webpack_require__.r(__webpack_exports__);\n/**\r\n * A shim for performance.now method which falls back\r\n * to Date.now if the first one is not supported.\r\n *\r\n * @returns {Timestamp}\r\n */\r\n/* harmony default export */ __webpack_exports__["default"] = ((function () {\r\n    if (window.performance && window.performance.now) {\r\n        return () => window.performance.now();\r\n    }\r\n\r\n    return () => Date.now();\r\n})());\n\n//# sourceURL=webpack:///./node_modules/intersection-observer-polyfill/src/shims/performance.now.js?')},"./src/polyfills.js":/*!**************************!*\
  !*** ./src/polyfills.js ***!
  \**************************//*! no exports provided */function(module,__webpack_exports__,__webpack_require__){'use strict';eval('__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var intersection_observer_polyfill__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! intersection-observer-polyfill */ "./node_modules/intersection-observer-polyfill/index.js");\n/* harmony import */ var _webcomponents_custom_elements__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @webcomponents/custom-elements */ "./node_modules/@webcomponents/custom-elements/custom-elements.min.js");\n/* harmony import */ var _webcomponents_custom_elements__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_webcomponents_custom_elements__WEBPACK_IMPORTED_MODULE_1__);\n// import \'intersection-observer\';\n\n\ncustomElements.polyfillWrapFlushCallback(function (flush) {\n  if (document.readyState === \'complete\') {\n    // If the document is already complete, flush synchronously.\n    flush();\n  } else {\n    // Otherwise, wait until it is complete.\n    document.addEventListener(\'readystatechange\', function () {\n      if (document.readyState === \'complete\') {\n        flush();\n      }\n    });\n  }\n});\n\n//# sourceURL=webpack:///./src/polyfills.js?')}});